<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans.xsd

		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd

		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
	"
		>

	<context:component-scan base-package="com.safeway.jpautils.*" />
	
	<!-- 
	<jdbc:embedded-database id="recruitingAppDS" type="HSQL">
	</jdbc:embedded-database>
	 -->

	<!-- ************************************JPA Config******************************************** -->   
	<!-- PERSISTANCE UNIT MANAGER -->
	<bean id="jpaAppDS"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:jpautils"/>
		<property name="username" value="sa" />
		<property name="password" value=""/>
	</bean>
	
	<jdbc:initialize-database data-source="jpaAppDS"
		enabled="true">
	<jdbc:script location="classpath:db/init.sql" />
	</jdbc:initialize-database>
	
	
	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations" value="classpath*:META-INF/persistence.xml" />
		<!-- if no datasource is specified, use this one -->
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="defaultDataSource" ref="jpaAppDS" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <property name="persistenceUnitManager" ref="persistenceUnitManager" />   
        <property name="packagesToScan" value="com.safeway.jpautils.entity.*" />
        
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
            </bean>
        </property>
        <property name="jpaProperties">
        	<props>
        	 <!--
        		<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
        	-->
        	</props>
        </property>
    </bean>  
    
	<bean id="bookDAO" class="com.hgj.daobot.test.dao.BookDAOImpl"/>	
	
	<bean id="authorDAO" class="com.hgj.daobot.test.dao.AuthorDAOImpl"/>	
	
	<bean id="genericDAO" class="com.hgj.daobot.dao.GenericDAOImpl"/>	
	<!--
	<bean id="recruitingAppDS" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton">
	    <property name="jndiName" value="java:comp/env/jdbc/recruitingAppDS" />
	    <property name="resourceRef" value="true" />        
	</bean>
	-->
</beans>